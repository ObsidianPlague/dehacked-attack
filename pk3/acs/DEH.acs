#library "DEH"
#include "zcommon.acs"

int BossSelection = 0;
Script "Dehacked_BossSelect" OPEN
{
	BossSelection = 0;
	if(GetCVar("deh_finalboss") <= 0 && ThingCountName("BossTarget", 0) > 0)
	{
		BossSelection = random(1, 9);
	} else if(ThingCountName("BossTarget", 0) > 0) {
		BossSelection = GetCVar("deh_finalboss");
	}
}

Script "Dehacked_BossSpawn" (void)
{
	if(BossSelection <= 1)
	{
		SetActorState(0, "NormalFinalBoss", 0);
	}
	else if(BossSelection == 2)
	{
		SetActorState(0, "AfritSwarm", 0);
	}
	else if(BossSelection == 3)
	{
		SetActorState(0, "FinalCountdown", 0);
	}
	else if(BossSelection == 4)
	{
		SetActorState(0, "HellSmith", 0);
	}
	else if(BossSelection == 5)
	{
		SetActorState(0, "SpiderMastermind", 0);
	}
	else if(BossSelection == 6)
	{
		SetActorState(0, "SuperArchvile", 0);
	}
	else if(BossSelection == 7)
	{
		SetActorState(0, "GridlockCardinal", 0);
	}
	else if(BossSelection == 8)
	{
		SetActorState(0, "Archangelus", 0);
	}
	else if(BossSelection == 9)
	{
		SetActorState(0, "TheInquisitor", 0);
	}
}

Script "Dehacked_BossCheck" (void)
{
	SetResultValue(BossSelection);
}

Script "Dehacked_BossTargetCount" (void)
{
	SetResultValue(ThingCountName("BossTarget", 0));
}

Script "Dehacked_BossMusic" (int music)
{
	if(GetCVar("deh_finalbossmusic"))
	{
		switch(music)
		{
		Case 0:
			SetMusic("");
			break;
		Case 1:
			SetMusic("SCYTHE2");
			break;
		Case 2:
			SetMusic("FINCOUNT");
			break;
		Case 3:
			SetMusic("SURVIVE");
			break;
		Case 4:
			SetMusic("GOINDOWN");
			break;
		Case 5:
			SetMusic("VALIANT");
			break;
		Case 6:
			SetMusic("GRIDLOCK");
			break;
		Case 7:
			SetMusic("ARCANGEL");
			break;
		Case 8:
			SetMusic("ANTARES");
			break;
		}
	}
}

Script "Dehacked_BossExitHandler" (int boss)
{
	switch(boss)
	{
	Case 1:
		while(ThingCountName("AfritBoss", 0) > 0)
		{
			Delay(1);
		}
		AmbientSound("brain/death", 127);
		Delay(120);
		Exit_Normal(0);
		break;
	Case 2:
		SetMusic("FINCOUNT"); //This one is deliberately forced
		Delay(181); //Intro
		SetFont("BIGFONT");
		HudMessageBold(s:"10";
		HUDMSG_FADEINOUT, 0, CR_PURPLE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"10";
		HUDMSG_FADEINOUT, 1, CR_PURPLE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //0:30
		HudMessageBold(s:"9";
		HUDMSG_FADEINOUT, 0, CR_BLUE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"9";
		HUDMSG_FADEINOUT, 1, CR_BLUE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //1:00
		HudMessageBold(s:"8";
		HUDMSG_FADEINOUT, 0, CR_LIGHTBLUE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"8";
		HUDMSG_FADEINOUT, 1, CR_LIGHTBLUE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //1:30
		HudMessageBold(s:"7";
		HUDMSG_FADEINOUT, 0, CR_CYAN, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"7";
		HUDMSG_FADEINOUT, 1, CR_CYAN, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //2:00
		HudMessageBold(s:"6";
		HUDMSG_FADEINOUT, 0, CR_GREEN, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"6";
		HUDMSG_FADEINOUT, 1, CR_GREEN, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //2:30
		HudMessageBold(s:"5";
		HUDMSG_FADEINOUT, 0, CR_GOLD, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"5";
		HUDMSG_FADEINOUT, 1, CR_GOLD, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //3:00
		HudMessageBold(s:"4";
		HUDMSG_FADEINOUT, 0, CR_ORANGE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"4";
		HUDMSG_FADEINOUT, 1, CR_ORANGE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //3:30
		HudMessageBold(s:"3";
		HUDMSG_FADEINOUT, 0, CR_FIRE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"3";
		HUDMSG_FADEINOUT, 1, CR_FIRE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //4:00
		HudMessageBold(s:"2";
		HUDMSG_FADEINOUT, 0, CR_RED, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"2";
		HUDMSG_FADEINOUT, 1, CR_RED, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //4:30
		HudMessageBold(s:"1";
		HUDMSG_FADEINOUT, 0, CR_DARKRED, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"1";
		HUDMSG_FADEINOUT, 1, CR_DARKRED, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(1050); //5:00
		HudMessageBold(s:"0";
		HUDMSG_FADEINOUT, 0, CR_WHITE, 0.5, 0.1, 5.0, 1.0, 1.0);
		HudMessageBold(s:"0";
		HUDMSG_FADEINOUT, 1, CR_WHITE, 0.5, 0.9, 5.0, 1.0, 1.0);
		Delay(35); //5:01
		AmbientSound("brain/death", 127);
		Delay(120);
		Exit_Normal(0);
		break;
	}
}

Script "Dehacked_Death" DEATH
{
	Delay(120);
	ACS_NamedTerminate("Dehacked_BossExitHandler", 0);
}

//From Eviternity's ACS
bool buffState = FALSE;
Script "AngelTag" (void) {
	if(buffState == FALSE) {
		int AngelHealth = GetActorProperty(0, APROP_HEALTH);
		if(PlayerCount() > 1) {
			SetActorProperty(0, APROP_HEALTH, PlayerCount() * AngelHealth);
		}
		buffState = TRUE;
	}
}